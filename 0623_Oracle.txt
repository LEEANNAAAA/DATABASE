--1 emp, dept 테이블 정보
SELECT *
FROM EMP, DEPT;

--2 해결
SELECT *
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

--3 2번문제 부서번호순
SELECT *
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY E.DEPTNO;

--4 3번문제 사원번호, 사원명, 부서명
SELECT EMPNO, ENAME, DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY E.DEPTNO;

--5 사원명, 봉급, 등급
SELECT E.ENAME, E.SAL, S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL>=S.LOSAL AND E.SAL<=S.HISAL;

SELECT E.ENAME, E.SAL, S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN LOSAL AND HISAL;

--6 5번 문제에서 + 급여가 2000~3000 사이
SELECT E.ENAME, E.SAL, S.GRADE
FROM EMP E, SALGRADE S
WHERE (E.SAL BETWEEN LOSAL AND HISAL) AND (E.SAL BETWEEN 2000 AND 3000);

--7 사원명, 부서위치, 급여등급/ 부서순 및 등급순
SELECT E.ENAME, D.LOC, S.GRADE, D.DEPTNO
FROM EMP E, DEPT D, SALGRADE S
WHERE E.DEPTNO=D.DEPTNO AND E.SAL BETWEEN LOSAL AND HISAL
ORDER BY D.DEPTNO, S.GRADE;

--8 사원번호, 사원명, 관리자번호
SELECT EMPNO, ENAME, MGR
FROM EMP;

--9 8번문제에 관리자명 추가
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME
FROM EMP E1, EMP E2
WHERE E1.MGR=E2.EMPNO;

--10 9번문제+부서명
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME, D.DNAME
FROM EMP E1, EMP E2, DEPT D
WHERE E1.MGR=E2.EMPNO AND E1.DEPTNO=D.DEPTNO;

--11 사원번호, 사원명, 관리자번호, 관리자명/관리자가 없더라도 다 나오게>(+)
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME
FROM EMP E1, EMP E2
WHERE E1.MGR=E2.EMPNO(+);

--12 
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME
FROM EMP E1, EMP E2
WHERE E1.MGR(+)=E2.EMPNO;

--13 EMP E NATURAL JOIN DEPT D (E.D.이런거 안붙임)
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, DEPTNO, D.DNAME, D.LOC
FROM EMP E NATURAL JOIN DEPT D
ORDER BY DEPTNO, E.EMPNO;

--14 > E.D.과 같은 소속이 필요함
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY E.DEPTNO, E.EMPNO;

--15 EMP E JOIN DEPT D USING(DEPTNO) > (E.D.이런거 안붙임)
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR,
      E.HIREDATE, E.SAL, E.COMM,
      DEPTNO, D.DNAME, D.LOC
FROM EMP E JOIN DEPT D USING(DEPTNO)
ORDER BY DEPTNO, E.EMPNO;

--16 EMP E JOIN DEPT D ON(E.DEPTNO=D.DEPTNO) > E.D.과 같은 소속이 필요함
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR,
      E.HIREDATE, E.SAL, E.COMM,
      E.DEPTNO, D.DNAME, D.LOC
FROM EMP E JOIN DEPT D ON(E.DEPTNO=D.DEPTNO)
ORDER BY E.DEPTNO, E.EMPNO;

--17 11번 바꾸기
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME
FROM EMP E1, EMP E2
WHERE E1.MGR=E2.EMPNO(+);

SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME
FROM EMP E1 LEFT OUTER JOIN EMP E2 ON(E1.MGR=E2.EMPNO);

--18 12번 바꾸기
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME
FROM EMP E1, EMP E2
WHERE E1.MGR(+)=E2.EMPNO;

SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME AS MGR_NAME
FROM EMP E1 RIGHT OUTER JOIN EMP E2 ON(E1.MGR=E2.EMPNO);

--19
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.ENAME
FROM EMP E1 FULL OUTER JOIN EMP E2 ON(E1.MGR=E2.EMPNO);


--Q1
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO AND E.SAL>2000
ORDER BY E.DEPTNO;

SELECT DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E NATURAL JOIN DEPT D
WHERE E.SAL>2000
ORDER BY DEPTNO;


--Q2
SELECT D.DEPTNO,
       D.DNAME,
       TRUNC(AVG(SAL)) AS AVG_SAL,
       MAX(SAL) AS MAX_SAL,
       MIN(SAL) AS MIN_SAL,
       COUNT(*) AS CNT
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO
  GROUP BY D.DEPTNO, D.DNAME;


SELECT DEPTNO,
       D.DNAME,
       TRUNC(AVG(SAL)) AS AVG_SAL,
       MAX(SAL) AS MAX_SAL,
       MIN(SAL) AS MIN_SAL,
       COUNT(*) AS CNT
  FROM EMP E JOIN DEPT D USING (DEPTNO)
  GROUP BY DEPTNO, D.DNAME;
  
--Q3
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
FROM EMP E RIGHT OUTER JOIN DEPT D ON(E.DEPTNO=D.DEPTNO)
ORDER BY D.DEPTNO, E.ENAME;


SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
FROM EMP E, DEPT D
WHERE D.DEPTNO=E.DEPTNO(+)
ORDER BY D.DEPTNO, E.ENAME;

--Q4
SELECT D.DEPTNO, D.DNAME, 
E.EMPNO, E.ENAME, E.MGR, E.SAL, E.DEPTNO AS DEPTNO_1, 
S.LOSAL, S.HISAL, S.GRADE, 
E2.EMPNO AS MGR_EMPNO, E2.ENAME AS ENAME
FROM EMP E RIGHT OUTER JOIN DEPT D ON (E.DEPTNO=D.DEPTNO)
          LEFT OUTER JOIN SALGRADE S ON (E.SAL BETWEEN LOSAL AND HISAL)
          LEFT OUTER JOIN EMP E2 ON(E.MGR=E2.EMPNO)
ORDER BY D.DEPTNO, E.EMPNO;


SELECT D.DEPTNO, D.DNAME, 
E.EMPNO, E.ENAME, E.MGR, E.SAL, E.DEPTNO AS DEPTNO_1, 
S.LOSAL, S.HISAL, S.GRADE, 
E2.EMPNO AS MGR_EMPNO, E2.ENAME AS ENAME
FROM EMP E, DEPT D, SALGRADE S, EMP E2
WHERE E.DEPTNO(+)=D.DEPTNO
      AND E.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+) 
      AND E.MGR=E2.EMPNO(+)
ORDER BY D.DEPTNO, E.EMPNO;



---------------------------------------------------------------
--# Chapter9 서브쿼리
--Ex 
SELECT *
FROM EMP
WHERE DEPTNO IN(10,20)
ORDER BY DEPTNO;

--1 이름이 Jones (무조건 홑따옴표 사용)
SELECT *
FROM EMP
--WHERE ENAME='JONES';
WHERE UPPER(ENAME) = UPPER('Jones');

--2 급여: 2975 이상(>=), 초과(>), 이하(<=), 미만(<)
SELECT *
FROM EMP
WHERE SAL>=2975;

SELECT *
FROM EMP
WHERE SAL>2975;

SELECT *
FROM EMP
WHERE SAL<=2975;

SELECT *
FROM EMP
WHERE SAL<2975;

--3 Jones보다 더 많은 봉급 받는 사람
SELECT *
FROM EMP
WHERE SAL>(SELECT SAL 
           FROM EMP 
           WHERE ENAME='JONES');
          
--4 SCOTT보다 먼저 입사한 사원의 이름과 입사일
SELECT ENAME, HIREDATE
FROM EMP
WHERE HIREDATE < (SELECT HIREDATE FROM EMP WHERE ENAME='SCOTT');

--5 급여평균
SELECT ROUND(AVG(SAL))
FROM EMP;

--6 급여 평균보다 더 많은 급여 받는 사원정보
SELECT *
FROM EMP
WHERE SAL>(SELECT TRUNC(AVG(SAL))
           FROM EMP);
           
--7 급여 평균보다 더 많은 급여 받는 20번부서 사원, 사원명, 급여, 부서명
SELECT E.ENAME, E.SAL, D.DNAME, DEPTNO
FROM EMP E JOIN DEPT D USING (DEPTNO)
WHERE DEPTNO=20 AND SAL>(SELECT TRUNC(AVG(SAL))
           FROM EMP); 
           
SELECT E.ENAME, E.SAL, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO 
AND E.DEPTNO=20 
AND SAL>(SELECT AVG(SAL)
           FROM EMP); 
           
--8 부서번호가 10,20인 사원의 정보
SELECT *
FROM EMP
WHERE DEPTNO IN(10,20);
--WHERE DEPTNO=10 AND DEPTNO=20;

--9 부서번호가 10,20 제외한 사원의 정보(NOT IN)
SELECT *
FROM EMP
WHERE DEPTNO NOT IN(10,20);

SELECT *
FROM EMP
WHERE NOT(DEPTNO=10 OR DEPTNO=20);

--10 각 부서별 최고봉급액
SELECT DEPTNO, MAX(SAL)
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

--11 각 부서별 최고 봉급액과 같은 급여를 받는 사원정보 > 어느 부서의 최고봉급액인지 알 수 없음
SELECT *
FROM EMP 
WHERE SAL IN (SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);

--12 11번과 동일하나 각 부서별 최고 봉급액과 동일한 봉급받는 사원만 출력(다중열)
SELECT *
FROM EMP 
WHERE (DEPTNO,SAL) IN (SELECT DEPTNO,MAX(SAL) FROM EMP GROUP BY DEPTNO);